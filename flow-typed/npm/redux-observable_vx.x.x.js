// flow-typed signature: c55300a3104613238b0c03fb38cb419d
// flow-typed version: <<STUB>>/redux-observable_v1.0.0/flow_v0.74.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'redux-observable'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */
import { Dispatch, MiddlewareAPI } from 'redux';

declare class reduxRxjs$StateObservable<+T> extends rxjs$Observable<T> {
  value: T;
}
declare type reduxRxjs$Epic<T, U> = (
  action$: rxjs$Observable<T>,
  state$: reduxRxjs$StateObservable<T>,
  dependencies: U
) => rxjs$Observable<T>;

declare type reduxRxjs$EpicMiddleware<T, U, S, A, D = Dispatch<A>> =
  {
    run <T>(rootEpic: reduxRxjs$Epic<T, U>): void
  }
  & MiddlewareAPI<S, A, D>

declare module 'redux-observable' {
  declare module.exports: {
    StateObservable: typeof reduxRxjs$StateObservable;
    createEpicMiddleware<+T, +U, S, A, D>(
      options?: {dependencies: U}
    ): reduxRxjs$EpicMiddleware<T, U, S, A, D>;
    combineEpics<+T,+D>(
      ...epics: Array<reduxRxjs$Epic<T,D>>
    ): reduxRxjs$Epic<T,D>;
    ofType<+T>(actionType: string): rxjs$Observable<T> => rxjs$Observable<T>;
  }
}
