// flow-typed signature: e74609033981b389b17494ffa17272ef
// flow-typed version: <<STUB>>/sifter_v0.5.3/flow_v0.62.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'sifter'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

type sifter$SortDirectionSearchOption = 'asc' | 'desc'

type sifter$SortSearchOption = {
  direction?: sifter$SortDirectionSearchOption;
  field: string;
}

type sifter$SearchOptions = {
  fields: string[];
  limit?: number | void;
  sort?: sifter$SortSearchOption[];
  sort_empty?: sifter$SortSearchOption[];
  filter?: boolean;
  conjunction?: 'and' | 'or';
  nesting?: boolean;
  respect_word_boundaries?: boolean;
}

type sifter$SearchResult<T> = {
  options: sifter$SearchOptions,
  query: string,
  tokens: Array<{
    string: string,
    regex: RegExp
  }>,
  total: number,
  items: Array<{
    id: T,
    score: number
  }>
}

declare module 'sifter' {

  declare export type SortSearchOption = sifter$SortSearchOption;
  declare export type SearchOptions = sifter$SearchOptions;
  declare export type SearchResult<T> = sifter$SearchResult<T>;
  declare export type SortDirection = sifter$SortDirectionSearchOption;

  declare class Sifter<T> {
    items: T;
    constructor (items?: T): this;
    search(query: string, options: sifter$SearchOptions): sifter$SearchResult<$Keys<T>>
  }

  declare module.exports: typeof Sifter;
}
